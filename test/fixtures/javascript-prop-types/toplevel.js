// Example usage:
//
// import { MyShape } from ./myShape.js;
//
// class MyComponent extends React.Component {
//   //
// }
//
// MyComponent.propTypes = {
//   input: MyShape
// };

import PropTypes from "prop-types";

let _Toplevel;
let _CerographClass;
let _ChemotherapeuticClass;
let _CimeliaClass;
let _CoadjustClass;
let _CredulityClass;
let _DeruralizeClass;
let _DiaereseClass;
let _Encrust;
let _FagginglyClass;
let _FenkClass;
let _FlagmakingClass;
let _HemocoeleClass;
let _Interacinar;
_Interacinar = PropTypes.shape({
    "assapan": PropTypes.number,
    "benefactorship": PropTypes.bool,
    "triseriatim": PropTypes.string,
    "tubbing": PropTypes.number,
    "untrimmed": PropTypes.any,
});
_HemocoeleClass = PropTypes.shape({
    "Chirotherium": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "catharticalness": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "disdiapason": PropTypes.oneOfType([PropTypes.any, PropTypes.string]),
    "homocerc": PropTypes.oneOfType([PropTypes.bool, PropTypes.any]),
    "nonbookish": PropTypes.any,
    "Walt": PropTypes.any,
    "acrogamy": PropTypes.any,
    "amelification": PropTypes.any,
    "autobiographic": PropTypes.any,
    "berat": PropTypes.any,
    "disproportionably": PropTypes.any,
    "erythrite": PropTypes.any,
    "graphic": PropTypes.any,
    "hepatological": PropTypes.any,
    "incommensurably": PropTypes.any,
    "misaffirm": PropTypes.any,
    "pocketbook": PropTypes.any,
    "sclerometric": PropTypes.any,
    "stambouline": PropTypes.any,
    "stickpin": PropTypes.any,
    "tubulure": PropTypes.any,
    "undelated": PropTypes.any,
    "unsalt": PropTypes.any,
    "untutelar": PropTypes.any,
    "vagrant": PropTypes.any,
});
_FlagmakingClass = PropTypes.shape({
    "Bunodonta": PropTypes.any,
    "Hydrocorisae": PropTypes.any,
    "Notacanthidae": PropTypes.any,
    "albarco": PropTypes.any,
    "hornify": PropTypes.any,
    "hypoglossus": PropTypes.any,
    "inexpiably": PropTypes.any,
    "ingratitude": PropTypes.any,
    "ladyfly": PropTypes.any,
    "medicament": PropTypes.any,
    "monogrammatic": PropTypes.any,
    "nobbut": PropTypes.any,
    "polyplacophore": PropTypes.any,
    "proexercise": PropTypes.any,
    "protoplast": PropTypes.any,
    "puzzling": PropTypes.any,
    "splanchnoskeleton": PropTypes.any,
    "unloveliness": PropTypes.any,
    "unquarantined": PropTypes.any,
    "unrenounceable": PropTypes.any,
});
_FenkClass = PropTypes.shape({
    "Dagomba": PropTypes.any,
    "Guyandot": PropTypes.any,
    "Reinwardtia": PropTypes.any,
    "Tritoness": PropTypes.any,
    "apoise": PropTypes.any,
    "astronomize": PropTypes.any,
    "cockhorse": PropTypes.any,
    "copular": PropTypes.any,
    "draffy": PropTypes.any,
    "foreigner": PropTypes.any,
    "neurogliosis": PropTypes.any,
    "osmious": PropTypes.any,
    "palpitate": PropTypes.any,
    "rebukeable": PropTypes.any,
    "reservatory": PropTypes.any,
    "scalt": PropTypes.any,
    "scripturalize": PropTypes.any,
    "tintometer": PropTypes.any,
    "undergrade": PropTypes.any,
    "undermountain": PropTypes.any,
});
_FagginglyClass = PropTypes.shape({
    "Anglic": PropTypes.any,
    "Heteromeri": PropTypes.any,
    "Poinsettia": PropTypes.any,
    "abranchian": PropTypes.any,
    "aculeiform": PropTypes.any,
    "adiaphoristic": PropTypes.any,
    "adoptionism": PropTypes.any,
    "antrotomy": PropTypes.any,
    "coerciveness": PropTypes.any,
    "decorist": PropTypes.any,
    "duckhood": PropTypes.any,
    "hypochnose": PropTypes.any,
    "lochage": PropTypes.any,
    "melee": PropTypes.any,
    "nonconformitant": PropTypes.any,
    "putatively": PropTypes.any,
    "semivolatile": PropTypes.any,
    "soleas": PropTypes.any,
    "unfastenable": PropTypes.any,
    "unmillinered": PropTypes.any,
});
_Encrust = PropTypes.shape({
    "Hibernia": PropTypes.any,
    "Hibiscus": PropTypes.any,
    "Lepidosauria": PropTypes.any,
    "Syllidae": PropTypes.any,
    "comradely": PropTypes.any,
    "diacanthous": PropTypes.any,
    "feminineness": PropTypes.any,
    "gossamered": PropTypes.any,
    "lollingly": PropTypes.any,
    "manager": PropTypes.any,
    "mechanic": PropTypes.any,
    "overminuteness": PropTypes.any,
    "papelonne": PropTypes.any,
    "plebification": PropTypes.any,
    "pugmiller": PropTypes.any,
    "recoveror": PropTypes.any,
    "spermatoblastic": PropTypes.any,
    "ungyved": PropTypes.any,
    "whirlabout": PropTypes.any,
    "woodenware": PropTypes.any,
});
_DiaereseClass = PropTypes.shape({
    "Amoreuxia": PropTypes.any,
    "ani": PropTypes.any,
    "bernicle": PropTypes.any,
    "blackwasher": PropTypes.any,
    "blowhard": PropTypes.any,
    "broma": PropTypes.any,
    "closecross": PropTypes.any,
    "congregationalism": PropTypes.any,
    "grayly": PropTypes.any,
    "historically": PropTypes.any,
    "hoast": PropTypes.any,
    "irretentive": PropTypes.any,
    "parcener": PropTypes.any,
    "pedder": PropTypes.any,
    "pseudoanatomic": PropTypes.any,
    "rhizocarpian": PropTypes.any,
    "samel": PropTypes.any,
    "silker": PropTypes.any,
    "subdentated": PropTypes.any,
    "subobscure": PropTypes.any,
});
_DeruralizeClass = PropTypes.shape({
    "Jehovistic": PropTypes.any,
    "Paninean": PropTypes.any,
    "Romney": PropTypes.any,
    "bockerel": PropTypes.any,
    "boulder": PropTypes.any,
    "churrus": PropTypes.any,
    "counterdigged": PropTypes.any,
    "dialogite": PropTypes.any,
    "digenic": PropTypes.any,
    "dunbird": PropTypes.any,
    "ergatogyne": PropTypes.any,
    "fiendful": PropTypes.any,
    "jackrod": PropTypes.any,
    "panther": PropTypes.any,
    "placentigerous": PropTypes.any,
    "sparm": PropTypes.any,
    "tocsin": PropTypes.any,
    "unnicked": PropTypes.any,
    "unstavable": PropTypes.any,
    "windfirm": PropTypes.any,
});
_CredulityClass = PropTypes.shape({
    "Flavia": PropTypes.any,
    "Hedychium": PropTypes.any,
    "Popean": PropTypes.any,
    "ammonolytic": PropTypes.any,
    "bushmaster": PropTypes.any,
    "considering": PropTypes.any,
    "consuetudinary": PropTypes.any,
    "embarras": PropTypes.any,
    "fineness": PropTypes.any,
    "flaithship": PropTypes.any,
    "gruffly": PropTypes.any,
    "leadwort": PropTypes.any,
    "overseriously": PropTypes.any,
    "parabola": PropTypes.any,
    "pectinatodenticulate": PropTypes.any,
    "pornocrat": PropTypes.any,
    "quadrisect": PropTypes.any,
    "seriality": PropTypes.any,
    "vamphorn": PropTypes.any,
    "wharp": PropTypes.any,
});
_CoadjustClass = PropTypes.shape({
    "Chirotherium": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "catharticalness": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "disdiapason": PropTypes.oneOfType([PropTypes.any, PropTypes.string]),
    "homocerc": PropTypes.oneOfType([PropTypes.bool, PropTypes.any]),
    "nonbookish": PropTypes.any,
    "Benny": PropTypes.any,
    "Netherlandish": PropTypes.any,
    "Phonelescope": PropTypes.any,
    "Sedaceae": PropTypes.any,
    "amidosulphonal": PropTypes.any,
    "ensnare": PropTypes.any,
    "hybridizer": PropTypes.any,
    "leastwise": PropTypes.any,
    "lof": PropTypes.any,
    "monkhood": PropTypes.any,
    "peonism": PropTypes.any,
    "porphyrogeniture": PropTypes.any,
    "preindemnify": PropTypes.any,
    "rosal": PropTypes.any,
    "scalenous": PropTypes.any,
    "scopine": PropTypes.any,
    "suberinize": PropTypes.any,
    "symbiot": PropTypes.any,
    "tablefellow": PropTypes.any,
    "unchargeable": PropTypes.any,
});
_CimeliaClass = PropTypes.shape({
    "Chirotherium": PropTypes.number,
    "catharticalness": PropTypes.number,
    "disdiapason": PropTypes.string,
    "homocerc": PropTypes.bool,
    "nonbookish": PropTypes.any,
});
_ChemotherapeuticClass = PropTypes.shape({
    "Chirotherium": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "catharticalness": PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    "disdiapason": PropTypes.oneOfType([PropTypes.any, PropTypes.string]),
    "homocerc": PropTypes.oneOfType([PropTypes.bool, PropTypes.any]),
    "nonbookish": PropTypes.any,
    "Maureen": PropTypes.any,
    "angioneurotic": PropTypes.any,
    "availment": PropTypes.any,
    "bladelet": PropTypes.any,
    "caulis": PropTypes.any,
    "chalcus": PropTypes.any,
    "enteradenological": PropTypes.any,
    "imporosity": PropTypes.any,
    "insistently": PropTypes.any,
    "intraparietal": PropTypes.any,
    "ivied": PropTypes.any,
    "nostochine": PropTypes.any,
    "nutcracker": PropTypes.any,
    "ofttimes": PropTypes.any,
    "phenocryst": PropTypes.any,
    "precoincident": PropTypes.any,
    "ramiferous": PropTypes.any,
    "stagmometer": PropTypes.any,
    "tetherball": PropTypes.any,
    "unshy": PropTypes.any,
});
_CerographClass = PropTypes.shape({
    "Tolowa": PropTypes.any,
    "apotropaion": PropTypes.any,
    "casuary": PropTypes.any,
    "creaker": PropTypes.any,
    "disqualification": PropTypes.any,
    "imperatorious": PropTypes.any,
    "impermeabilize": PropTypes.any,
    "metastoma": PropTypes.any,
    "noctidiurnal": PropTypes.any,
    "nonreserve": PropTypes.any,
    "ophthalmotonometry": PropTypes.any,
    "pailful": PropTypes.any,
    "pigfish": PropTypes.any,
    "pongee": PropTypes.any,
    "prosodical": PropTypes.any,
    "scrofuloderm": PropTypes.any,
    "storekeeping": PropTypes.any,
    "therologist": PropTypes.any,
    "tradeful": PropTypes.any,
    "unriveting": PropTypes.any,
});
_Toplevel = PropTypes.shape({
    "centrodesmose": PropTypes.string,
    "cerograph": PropTypes.arrayOf(PropTypes.oneOfType([_CerographClass, PropTypes.any, PropTypes.string])),
    "chemotherapeutics": PropTypes.arrayOf(PropTypes.oneOfType([_ChemotherapeuticClass, PropTypes.number])),
    "cimelia": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), _CimeliaClass, PropTypes.any])),
    "citrated": PropTypes.number,
    "clinodome": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),
    "coadjust": PropTypes.arrayOf(PropTypes.oneOfType([_CoadjustClass, PropTypes.number])),
    "consilience": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object])),
    "constructor": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.object])),
    "continuative": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),
    "credulity": PropTypes.arrayOf(PropTypes.oneOfType([_CredulityClass, PropTypes.number, PropTypes.string])),
    "creviced": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.string])),
    "cubiculum": PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.any]))),
    "deruralize": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), PropTypes.bool, _DeruralizeClass])),
    "diaereses": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.bool, _DiaereseClass])),
    "dissolution": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), PropTypes.any])),
    "downstroke": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), PropTypes.bool, PropTypes.string])),
    "electrotautomerism": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.any])),
    "eleutheromania": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.string])),
    "encrust": _Encrust,
    "entomoid": PropTypes.arrayOf(PropTypes.oneOfType([_CimeliaClass, PropTypes.number])),
    "epipaleolithic": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])),
    "expropriable": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), _CimeliaClass, PropTypes.number])),
    "faggingly": PropTypes.arrayOf(PropTypes.oneOfType([_FagginglyClass, PropTypes.number])),
    "fenks": PropTypes.arrayOf(PropTypes.oneOfType([_FenkClass, PropTypes.string])),
    "flagmaking": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, _FlagmakingClass, PropTypes.number])),
    "fluorometer": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.any, PropTypes.string])),
    "fulsome": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.any])),
    "fuzzy": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object])),
    "gardenwards": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.bool, PropTypes.string])),
    "generalissimo": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.any])),
    "habeas": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.any])),
    "hemicrystalline": PropTypes.arrayOf(PropTypes.oneOfType([_CimeliaClass, PropTypes.string])),
    "hemocoele": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), _HemocoeleClass])),
    "hoister": PropTypes.arrayOf(PropTypes.oneOfType([_CimeliaClass, PropTypes.any, PropTypes.string])),
    "hyperpiesis": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), _CimeliaClass, PropTypes.any])),
    "hyppish": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.any, PropTypes.string])),
    "idealizer": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), _CimeliaClass, PropTypes.number])),
    "incrustator": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.string])),
    "intentiveness": PropTypes.arrayOf(PropTypes.oneOfType([_CimeliaClass, PropTypes.number, PropTypes.string])),
    "interacinar": _Interacinar,
    "intercorrelation": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.any])),
    "jacutinga": PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object])),
});

export const Toplevel = _Toplevel;
